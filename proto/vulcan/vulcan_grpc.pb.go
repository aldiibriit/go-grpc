// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: vulcan.proto

package vulcan

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MobileAppsClient is the client API for MobileApps service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MobileAppsClient interface {
	SelectMobileAppByAppID(ctx context.Context, in *RequestSelectMobileAppByAppID, opts ...grpc.CallOption) (*ResponseSelectMobileAppByAppID, error)
}

type mobileAppsClient struct {
	cc grpc.ClientConnInterface
}

func NewMobileAppsClient(cc grpc.ClientConnInterface) MobileAppsClient {
	return &mobileAppsClient{cc}
}

func (c *mobileAppsClient) SelectMobileAppByAppID(ctx context.Context, in *RequestSelectMobileAppByAppID, opts ...grpc.CallOption) (*ResponseSelectMobileAppByAppID, error) {
	out := new(ResponseSelectMobileAppByAppID)
	err := c.cc.Invoke(ctx, "/MobileApps/SelectMobileAppByAppID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MobileAppsServer is the server API for MobileApps service.
// All implementations must embed UnimplementedMobileAppsServer
// for forward compatibility
type MobileAppsServer interface {
	SelectMobileAppByAppID(context.Context, *RequestSelectMobileAppByAppID) (*ResponseSelectMobileAppByAppID, error)
	mustEmbedUnimplementedMobileAppsServer()
}

// UnimplementedMobileAppsServer must be embedded to have forward compatible implementations.
type UnimplementedMobileAppsServer struct {
}

func (UnimplementedMobileAppsServer) SelectMobileAppByAppID(context.Context, *RequestSelectMobileAppByAppID) (*ResponseSelectMobileAppByAppID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectMobileAppByAppID not implemented")
}
func (UnimplementedMobileAppsServer) mustEmbedUnimplementedMobileAppsServer() {}

// UnsafeMobileAppsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MobileAppsServer will
// result in compilation errors.
type UnsafeMobileAppsServer interface {
	mustEmbedUnimplementedMobileAppsServer()
}

func RegisterMobileAppsServer(s grpc.ServiceRegistrar, srv MobileAppsServer) {
	s.RegisterService(&MobileApps_ServiceDesc, srv)
}

func _MobileApps_SelectMobileAppByAppID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSelectMobileAppByAppID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileAppsServer).SelectMobileAppByAppID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MobileApps/SelectMobileAppByAppID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileAppsServer).SelectMobileAppByAppID(ctx, req.(*RequestSelectMobileAppByAppID))
	}
	return interceptor(ctx, in, info, handler)
}

// MobileApps_ServiceDesc is the grpc.ServiceDesc for MobileApps service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MobileApps_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "MobileApps",
	HandlerType: (*MobileAppsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SelectMobileAppByAppID",
			Handler:    _MobileApps_SelectMobileAppByAppID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vulcan.proto",
}
